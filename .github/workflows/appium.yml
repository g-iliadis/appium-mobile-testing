name: Mobile App Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    strategy:
      matrix:
        app_env: [ test ]
    env:
      API_LEVEL: 34
      APPIUM_PORT: 4725
      APP_ENV: ${{ matrix.app_env }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
      - uses: android-actions/setup-android@v3

      - name: Upgrade Android SDK cmdline-tools
        run: |
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          cd "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          curl -sSLo sdk-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q sdk-tools.zip
          rm sdk-tools.zip

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Appium
        run: |
          npm install -g appium
          appium driver install uiautomator2

      - uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ env.API_LEVEL }}

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Run tests on API-${{ env.API_LEVEL }} emulator
        uses: ReactiveCircus/android-emulator-runner@v2.34.0
        with:
          api-level: ${{ env.API_LEVEL }}
          target: google_apis
          arch: x86_64
          profile: Nexus 6
          avd-name: test_avd_${{ env.API_LEVEL }}
          force-avd-creation: false
          disable-animations: true
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -no-snapshot-save -no-snapshot-load
          script: |
            appium --port ${{ env.APPIUM_PORT }} >appium.log 2>&1 &
            APPIUM_PID=$!
            adb wait-for-device
            adb shell input keyevent 82
            APK_PATH="$GITHUB_WORKSPACE/mobile_apps/${APP_ENV}.apk"
            if [ ! -f "$APK_PATH" ]; then
              echo "::error::Expected $APK_PATH but it doesn't exist."
              kill $APPIUM_PID
              exit 1
            fi
            adb install -r "$APK_PATH"
            mvn -B -f mobile_apps/pom.xml clean verify -Ddevice=android.emulator -Denv=${APP_ENV} --no-transfer-progress || TEST_EXIT_CODE=$?
            kill $APPIUM_PID || true
            exit ${TEST_EXIT_CODE:-0}

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cucumber-reports-${{ github.run_number }}-${{ matrix.app_env }}
          path: |
            mobile_apps/target/cucumber-html-reports/cucumber-html-reports/
            appium.log


      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: failure-artifacts-${{ github.run_number }}-${{ matrix.app_env }}
          path: |
            screenshots/
            logs/